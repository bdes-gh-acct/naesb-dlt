{
  "name": "@api/ledger-id",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "docker": "docker build -t naesb-api-ledger-id -f ../../docker/api-ledger-id/Dockerfile ../../",
    "docker:publish": "npm run docker && docker tag naesb-api-ledger-id:latest 094458522773.dkr.ecr.us-east-1.amazonaws.com/naesb-dlt/ca-service/api:latest && docker push 094458522773.dkr.ecr.us-east-1.amazonaws.com/naesb-dlt/ca-service/api:latest"
  },
  "dependencies": {
    "@hyperledger/fabric-gateway": "^1.3.0",
    "@nestjs/axios": "^0.1.0",
    "@nestjs/cache-manager": "^2.1.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/mapped-types": "*",
    "@nestjs/passport": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/terminus": "^10.0.0",
    "@nestjs/typeorm": "^10.0.0",
    "@naesb/dlt-model": "*",
    "@shared/server-utils": "*",
    "axios": "^1.0.0",
    "cache-manager": "^3.5.0",
    "dotenv": "^10.0.0",
    "jwks-rsa": "^2.0.4",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "reflect-metadata": "^0.1.13",
    "rimraf": "^3.0.2",
    "rxjs": "^7.2.0",
    "typeorm": "^0.3.7",
    "zod": "^3.21.4"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
